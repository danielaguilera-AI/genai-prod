name: Terraform Apply, Build & Push to ECR, Deploy to ECS

on:
  push:
    branches: [ main ]

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    outputs:
      ecr_url: ${{ steps.get-ecr-url.outputs.ecr_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Debug Terraform Output
        working-directory: ./terraform
        run: terraform output -raw ecr_repository_url || echo "⚠️ Terraform output is empty!"

      - name: Get ECR Repository URL
        id: get-ecr-url
        working-directory: ./terraform
        run: |
          ECR_URL=$(terraform output -raw ecr_repository_url 2>/dev/null | tr -d '\r' | tr -d '\n')
          echo "ECR_URL=$ECR_URL"
          if [[ -z "$ECR_URL" ]]; then
            echo "❌ Error: Terraform did not output ECR URL. Check Terraform logs!"
            exit 1
          fi
          echo "::set-output name=ecr_url::$ECR_URL"
          echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: terraform-apply

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug Passed ECR URL
        run: echo "ECR_REGISTRY=${{ needs.terraform-apply.outputs.ecr_url }}"

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ needs.terraform-apply.outputs.ecr_url }}
          IMAGE_TAG: latest
        run: |
          if [[ -z "$ECR_REGISTRY" ]]; then
            echo "❌ Error: ECR_REGISTRY is empty. Terraform might have failed."
            exit 1
          fi
          docker build -t $ECR_REGISTRY:$IMAGE_TAG .
          docker push $ECR_REGISTRY:$IMAGE_TAG

      - name: Update ECS Service
        env:
          AWS_REGION: us-east-1
          CLUSTER_NAME: llm-cluster
          SERVICE_NAME: llm-service
          CONTAINER_NAME: fastapi-container
          ECR_IMAGE: ${{ needs.terraform-apply.outputs.ecr_url }}:latest
        run: |
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment






