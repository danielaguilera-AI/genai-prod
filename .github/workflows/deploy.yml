name: Terraform Apply, Build & Push to ECR, Deploy to ECS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      terraform_action:
        description: "Terraform action to run (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Run Terraform Apply or Destroy
        working-directory: ./terraform
        run: terraform ${{ github.event.inputs.terraform_action || 'apply' }} --auto-approve

      - name: Debug Terraform Output (if Apply)
        if: github.event.inputs.terraform_action == 'apply' || github.event_name == 'push'
        working-directory: ./terraform
        run: terraform output

  build-and-deploy:
    if: github.event.inputs.terraform_action == 'apply' || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [ terraform ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Get ECR Repository URL Directly
        id: get-ecr-url
        working-directory: ./terraform
        run: |
          echo "🔍 Running Terraform Output Command..."
          ECR_URL=$(terraform output -raw ecr_repository_url || echo "")
          
          if [[ -z "$ECR_URL" ]]; then
            echo "❌ ERROR: ECR_URL is empty! Terraform output might be incorrect."
            exit 1
          fi

          echo "ECR_URL=$ECR_URL" >> "$GITHUB_ENV"

      - name: Debug Retrieved ECR URL
        run: |
          echo "✅ Retrieved ECR URL: '${{ env.ECR_URL }}'"

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        run: |
          echo "🚀 Building and pushing to: ${{ env.ECR_URL }}"
          docker build -t "${{ env.ECR_URL }}:latest" .
          docker push "${{ env.ECR_URL }}:latest"

      - name: Force ECS Service Update (Refresh Task)
        run: |
          aws ecs update-service --cluster llm-cluster --service llm-service --force-new-deployment




