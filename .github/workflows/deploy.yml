name: Terraform Apply, Build & Push to ECR, Deploy to ECS

on:
  push:
    branches: [ main ]

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    outputs:
      ecr_url: ${{ steps.get-ecr-url.outputs.ecr_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Get ECR Repository URL
        id: get-ecr-url
        working-directory: ./terraform
        run: |
          echo "üîç Retrieving ECR URL from Terraform output..."
          
          # Extract a single valid ECR URL
          ECR_URL=$(terraform output -raw ecr_repository_url 2>/dev/null | grep -Eo '([a-zA-Z0-9]+\.dkr\.ecr\.[a-z0-9-]+\.amazonaws\.com/[a-zA-Z0-9_-]+)' | head -n 1 | tr -d '[:space:]')
          
          # Debug Output
          echo "üìå DEBUG: Extracted ECR URL is '$ECR_URL'"
          
          # Fail if ECR_URL is empty
          if [[ -z "$ECR_URL" ]]; then
            echo "‚ùå ERROR: ECR_URL is empty! Terraform might have failed."
            exit 1
          fi
          
          # Save to GITHUB_ENV and GITHUB_OUTPUT
          echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV
          echo "ecr_url=$ECR_URL" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: terraform-apply

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Environment Variables
        run: |
          echo "ECR_REGISTRY=${{ needs.terraform-apply.outputs.ecr_url }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Debug ECR URL
        run: |
          echo "üìå DEBUG: Using ECR_REGISTRY='$ECR_REGISTRY'"
          
          if [[ -z "$ECR_REGISTRY" ]]; then
            echo "‚ùå ERROR: ECR_REGISTRY is empty! Terraform might have failed."
            exit 1
          fi

      - name: Build, Tag, and Push Docker Image
        run: |
          docker build -t "$ECR_REGISTRY:$IMAGE_TAG" .
          docker push "$ECR_REGISTRY:$IMAGE_TAG"












